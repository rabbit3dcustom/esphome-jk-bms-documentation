55 AA EB 90 03 05 4A 4B 5F 50 42 32 41 31 36 53 32 30 50 00 00 00 31 35 41 00 00 00 00 00 31 35 2E 33 38 00 00 00 4C 46 8B 00  //42
05 00 00 00 4A 4B 5F 50 42 32 41 31 36 53 32 30 50 00 00 00 30 30 35 38 35 39 00 00 00 00 00 00 00 00 00 00 32 35 30 34 31 35  //84
00 00 34 30 31 31 30 34 39 30 34 33 31 00 30 30 30 00 49 6E 70 75 74 20 55 73 65 72 64 61 74 61 00 00 30 30 35 38 35 39 00 00  //126
C0 D8 E7 FE 3F 00 00 01 00 00 00 00 00 00 00 00 00 04 FF 67 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF 0F 00 00 00 00 00 00  //168
00 00 00 00 00 00 00 00 01 FF 67 00 00 00 00 00 00 00 00 00 00 00 00 00 09 08 00 01 64 00 00 00 5F 00 00 00 3C 00 00 00 32 00  //210
00 00 00 00 00 00 00 00 00 00 10 0E 00 00 32 32 01 1E 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FE 9F E9 FF 0F 00 00  //252
00 00 00 00 00 34 03 10 16 1C 00 01 C5 A5

Buffer size: 308
 55 AA EB 90 03 05 4A 4B 5F 50 42 32 41 31 36 53 32 30 50 00 00 00 31 35 41 00 00 00 00 00 31 35 2E 33 38 00 00 00 B4 E7 07 02 
 00 00 34 30 31 31 30 34 39 30 32 36 37 00 30 30 30 00 49 6E 70 75 74 20 55 73 65 72 64 61 74 61 00 00 30 30 35 38 35 39 00 00 
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FE FF FF FF 8F E9 1D 02 00 00 00 00 90 1F 00 00 00 00 
 00 00 00 00 00 00 00 00 01 FF 67 00 00 00 00 00 00 00 00 00 00 00 00 00 09 08 00 01 64 00 00 00 5F 00 00 00 3C 00 00 00 32 00 
 00 00 00 00 00 00 00 00 00 00 10 0E 00 00 14 32 01 1E 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FE 9F E9 FF 0F 00 00 
 00 00 00 00 00 C0 02 10 16 1C 00 01 C4 74 

Checksum: 
Position in frame JKPB_RS485_CHECKSUM_INDEX = 299 value 0x0034 
JKPB_RS485_NUMBER_OF_ELEMENTS_TO_COMPUTE_CHECKSUM = 299 value 0x0034

The physical addres for the jkbms is:

if the frame type is 01 -> At position 4 in the vector >> 55 AA EB 90 03 << => 03. Then the physical address is at position 264 + 6 (JKPB_RS485_FRAME_TYPE_ADDRESS_FOR_FRAME_TYPE_x01 + 6) = 270

if the frame type is 02 or 03 -> At position 4 in the vector >> 55 AA EB 90 02 << => 02. Then the physical address is at position 300 (JKPB_RS485_ADDRESS_OF_RS485_ADDRESS) = 300
>>C0 02 10 16 1C 00 01 C4 74 << 307 is the last position=>74. Position 300 is the address: 02 and the check sum is the position: 299 -> C0

if (raw[JKPB_RS485_FRAME_TYPE_ADDRESS] == 1) {
    address = raw[JKPB_RS485_FRAME_TYPE_ADDRESS_FOR_FRAME_TYPE_x01 + 6];
    ESP_LOGVV(TAG, "JkRS485Sniffer::manage_rx_buffer_()-JKPB_RS485_RESPONSE_SIZE 2: JKPB_RS485_FRAME_TYPE_ADDRESS_FOR_FRAME_TYPE_x01 - Frame type [0x%02X] Position [%d]: [0x%02X] equal to address [0x%02X]", raw[JKPB_RS485_FRAME_TYPE_ADDRESS], JKPB_RS485_FRAME_TYPE_ADDRESS_FOR_FRAME_TYPE_x01 + 6, raw[JKPB_RS485_FRAME_TYPE_ADDRESS_FOR_FRAME_TYPE_x01 + 6], address);
} else {
    address = raw[JKPB_RS485_ADDRESS_OF_RS485_ADDRESS];
    ESP_LOGVV(TAG, "JkRS485Sniffer::manage_rx_buffer_()-JKPB_RS485_RESPONSE_SIZE 2: JKPB_RS485_ADDRESS_OF_RS485_ADDRESS - Frame type [%d] Position [%d]: [%d] equal to address [0x%02X]", raw[JKPB_RS485_FRAME_TYPE_ADDRESS], JKPB_RS485_ADDRESS_OF_RS485_ADDRESS, raw[JKPB_RS485_ADDRESS_OF_RS485_ADDRESS], address);
}
